package org.bsc.confluence;

import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.net.MalformedURLException;
import java.util.Collections;
import java.util.List;


/**
 *
 * @author Sorrentino
 *
 */
public class ConfluenceUtils {

	/**
	 *
	 * @param value
	 * @return
	 */
	public static String decode( String value ) {
		if( null==value ) return value;
 		final String result =  value
                        .replace("{", "\\{")
                        .replace("}", "\\}")
                        .replaceAll("</?[Pp][Rr][Ee]>", "{noformat}")
                        .replaceAll("<[Cc][Oo][Dd][Ee]>", "{{")
                        .replaceAll("</[Cc][Oo][Dd][Ee]>", "}}")
                        .replaceAll("</?[Bb]>", "*")
                        .replaceAll("<[Bb][Rr]/?>", "\\\\")
                        .replaceAll("<[Hh][Rr]/?>", "----")
                        .replaceAll("<[Pp]>", "\n\n")
                        .replaceAll("</[Pp]>", "")

                        ;
                return ConfluenceHtmlListUtils.replaceHtmlList(result);
	}

	/**
	 *
	 * @param value
	 * @return
	 */
	public static String encodeAnchor( String value ) {

		if( null==value ) return null;

		String v = decode(value);

		try {
			new java.net.URL(v);

			return v;

		} catch (MalformedURLException e) {

			return v.replace(':', '_');

		}



 	}

        /**
	 *
	 * @param confluence
	 * @param parentPageId
	 * @param title
	 * @return
	 * @throws Exception
	 */
        /*
	private static boolean removePage( Confluence confluence, String spaceKey, String parentPageTitle, String title ) throws Exception {

            if( null==confluence ) throw new IllegalArgumentException("confluence instance is null");

            Page parentPage = confluence.getPage(spaceKey, parentPageTitle);

            PageSummary pageSummary = findPageByTitle( confluence, parentPage.getId(), title);

            if( pageSummary!=null ) {
                confluence.removePage(pageSummary.getId());
                return true;
            }

            return false;
        }
        */

        /**
         * 
         * @param confluence
         * @param parentPage
         * @param title
         * @return
         * @throws Exception 
         */
        /*
        private static boolean removePage( Confluence confluence, Page parentPage, String title ) throws Exception {

            if( null==confluence ) throw new IllegalArgumentException("confluence instance is null");
            if( null==parentPage ) throw new IllegalArgumentException("parentPage is null");


            PageSummary pageSummary = findPageByTitle( confluence, parentPage.getId(), title);

            if( pageSummary!=null ) {
                confluence.removePage(pageSummary.getId());
                return true;
            }

            return false;
        }
        */
        
        
	/**
	 *
	 * @param confluence
	 * @param parentPage
	 * @param title
	 * @return
	 * @throws Exception
	 */
        /*
	private static Page getOrCreatePage( Confluence confluence, Page parentPage, String title ) throws Exception {
            if( null==confluence ) throw new IllegalArgumentException("confluence instance is null");

            PageSummary pageSummary = findPageByTitle( confluence, parentPage.getId(), title);

            Page result;

            if( null!=pageSummary ) {
                    result = confluence.getPage(pageSummary.getId());
            }
            else {
                    result = new Page(Collections.EMPTY_MAP);
                    result.setSpace(parentPage.getSpace());
                    result.setParentId(parentPage.getId());
                    result.setTitle(title);

            }

            return result;
	}
        */
        
        /**
         *
         * @return ads banner
         */
        public static String getBannerWiki() {

            final StringBuilder wiki = new StringBuilder()
                .append("{info:title=").append("Generated page").append('}')
                .append("this page has been generated by plugin: ")
                .append("[org.bsc.maven:maven-confluence-reporting-plugin|https://github.com/bsorrentino/maven-confluence-plugin]")
                .append("{info}")
                .append('\n');

            return wiki.toString();
        }

}
